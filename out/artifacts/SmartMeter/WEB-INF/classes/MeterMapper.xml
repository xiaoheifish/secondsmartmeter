<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.terabits.dao.mapper.MeterMapper">

    <!-- 自定义返回结果集 -->
    <resultMap id="meterMap" type="com.terabits.meta.po.MeterPO">
        <id property="id" column="id" javaType="java.lang.Integer"></id>
        <result property="meterId" column="uk_meter_id" javaType="java.lang.String"></result>
        <result property="building" column="uk_building" javaType="java.lang.String"></result>
        <result property="room" column="uk_room"  javaType="java.lang.String"></result>
        <result property="terminalImei" column="terminal_imei" javaType="java.lang.String"></result>
        <result property="meterRemain" column="meter_remain" javaType="java.lang.Double"></result>
        <result property="meterState" column="meter_state" javaType="java.lang.Integer"></result>
        <result property="gmtCreate" column="gmt_create" javaType="java.lang.String"></result>
        <result property="gmtModified" column="gmt_modified" javaType="java.lang.String"></result>
    </resultMap>
    
    <resultMap id="meterLocation" type="com.terabits.meta.bo.LocationBO">
        <result property="building" column="uk_building" javaType="java.lang.String"></result>
        <result property="room" column="uk_room"  javaType="java.lang.String"></result>
    </resultMap>
    <!-- 在各种标签中的id属性必须和接口中的方法名相同 ， id属性值必须是唯一的，不能够重复使用。parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型-->
    <!-- useGeneratedKeys：（ 仅 对 insert 有 用 ） 这 会 告 诉 MyBatis 使 用 JDBC 的getGeneratedKeys
                方法来取出由数据（比如：像 MySQL 和 SQLServer 这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： false。 -->
    <!--keyProperty： （仅对 insert有用）标记一个属性， MyBatis 会通过 getGeneratedKeys或者通过 insert 语句的 selectKey 子元素设置它的值。默认：不设置。 -->
    <!--#{}中的内容，为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值  -->


    <insert id="insertMeter" keyProperty="id">
        insert into meter (uk_meter_id,uk_building,uk_room,relarive_location, terminal_imei,meter_remain,meter_state,gmt_create,gmt_modified)
        values (#{meterId},#{building},#{room},#{relativeLocation},#{terminalImei},#{meterRemain},#{meterState},now(),now())
    </insert>

    <update id="updateMeter" parameterType="com.terabits.meta.bo.MeterBO">
      <!--  update meter
         /*set uk_building=#{building},uk_room=#{room},terminal_imei=#{terminalImei},meter_remain=#{meterRemain},meter_state=#{meterState},gmt_modified=now()*/
        <trim prefix="set" suffixOverrides=",">
            <if test="terminalImei!=null">terminal_imei=#{terminalImei},</if>
            <if test="meterRemain!=null">meter_remain=#{meterRemain},</if>
            <if test="meterState!=null">meter_state=#{meterState},</if>
        </trim>-->
        update meter set terminal_imei=#{terminalImei},meter_remain=#{meterRemain},meter_state=#{meterState},gmt_modified=now() where uk_building = #{building} and uk_room = #{room}
    </update>

    <update id="updateMeterImei" parameterType="map" >
        update meter set terminal_imei=#{arg0}, gmt_modified=now() where uk_building = #{arg1} AND uk_room = #{arg2}
    </update>

    <update id="updateMeterRemain" >
        update meter set meter_remain=#{arg0},gmt_modified=now() where uk_building = #{arg1} and uk_room = #{arg2}
    </update>

    <update id="updateMeterState" >
        update meter set meter_state=#{arg0},gmt_modified=now() where uk_building = #{arg1} and uk_room = #{arg2}
    </update>

    <update id="updateGroupImei">
        update meter set terminal_imei=#{newImei} where terminal_imei=#{oldImei}
    </update>

    <delete id="deleteMeter" parameterType="String">
        delete from meter where uk_building = #{arg0} and uk_room = #{arg1}
    </delete>

    <delete id="deleteGroupMeter" parameterType="String">
        delete from meter where terminal_imei = #{imei}
    </delete>

    <select id="selectOneMeter" parameterType="String" resultMap="meterMap">
        select * from meter where uk_building = #{arg0} and uk_room = #{arg1}
    </select>

    <select id="selectMeterByRelativeLocation" resultMap="meterMap">
        select * from meter where terminal_imei = #{arg0} and relative_location = #{arg1}
    </select>

    <select id="selectMeterByImei" parameterType="String" resultMap="meterMap">
        select * from meter where terminal_imei = #{imei}
    </select>

    <select id="selectMeterByBuilding" parameterType="String" resultMap="meterMap">
        select * from meter where uk_building= #{arg0}
    </select>

    <select id="selectAllMeter" resultMap="meterMap">
        select * from meter
    </select>

    <select id="selectAllBuilding" resultType="String">
        select DISTINCT uk_building from meter
    </select>


    <select id="selectAllRoomByBuilding" parameterType="String" resultType="String">
        select room from meter WHERE uk_building = #{building}
    </select>

    <select id="selectAllRelativeLocationByImei" parameterType="String" resultType="int">
        select relative_location from meter where uk_terminal_imei = #{imei}
    </select>

    <select id="selectMeterInfo" parameterType="com.terabits.meta.bo.SelectDataBO" resultMap="meterMap">
        select * from meter
        <where>
            <if test="building != null and building != ''">
                uk_building = #{building}
            </if>
            <if test="room != null and room != ''">
                and uk_room = #{room}
            </if>
            <if test="beginTime != null and beginTime != ''">
                and gmt_create >= #{beginTime}
            </if>
            <if test="endTime != null and endTime != ''">
                and gmt_create &lt; #{endTime}
            </if>
        </where>
    </select>

    <resultMap id="meterAndClient" type="com.terabits.meta.po.MeterClientPO">
        <result property="building" column="uk_building" javaType="java.lang.String"></result>
        <result property="room" column="uk_room"  javaType="java.lang.String"></result>
        <result property="remain" column="meter_remain" javaType="java.lang.Double"></result>
        <collection property="clients" javaType="java.util.List" ofType="com.terabits.meta.bo.ClientInfoBO">
            <result property = "name" column="name" javaType="java.lang.String" />
            <result property="phone" column="phone" javaType="java.lang.String" />
        </collection>
    </resultMap>
    <select id="queryForList" resultMap="meterAndClient">
        SELECT * FROM
        meter u, client_info r where
        u.uk_building = r.building and u.uk_room = r.room and u.uk_building = #{building} and u.uk_room = #{room}
    </select>

   <!-- &lt;!&ndash; 判断当前数据是否被预定 &ndash;&gt;
    <select id="selectListMeter" parameterType="Java.util.List" resultType="java.lang.Integer">
        SELECT count(1)
        FROM place WHERE
        <foreach collection="list" item="item" index="index" separator="or">
            (
            <if test="item.shopId">shopId = #{item.shopId}</if>
            <if test="item.sportId">AND sportId = #{item.sportId}</if>
            <if test="item.exptCsTm">AND exptCsTm = #{item.exptCsTm}</if>
            <if test="item.placeId">AND placeId = #{item.placeId}</if>
            <if test="item.rowId">AND timeId = #{item.rowId}</if>
            AND orderSt = '1'
            )
        </foreach>
    </select>
-->


</mapper>