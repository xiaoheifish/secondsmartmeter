<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.terabits.dao.mapper.BuildingMapper">

    <!-- 自定义返回结果集 -->
    <resultMap id="buildingMap" type="com.terabits.meta.po.BuildingPO">
        <id property="id" column="id" javaType="java.lang.Integer"></id>
        <result property="building" column="building" javaType="java.lang.String"></result>
        <result property="room" column="room" javaType="java.lang.String"></result>
        <result property="voltage" column="voltage" javaType="java.lang.Double"></result>
        <result property="current" column="current" javaType="java.lang.Double"></result>
        <result property="power" column="power" javaType="java.lang.Double"></result>
        <result property="deltaPower" column="deltapower" javaType="java.lang.Double"></result>
        <result property="gmtCreate" column="gmt_create" javaType="java.lang.String"></result>
        <result property="gmtModified" column="gmt_modified" javaType="java.lang.String"></result>
    </resultMap>

    <resultMap id="tempBusinessDataMap" type="com.terabits.meta.bo.TempBusinessDataBO">
        <result property="building" column="building" javaType="java.lang.String"></result>
        <result property="room" column="room" javaType="java.lang.String"></result>
        <result property="power" column="power" javaType="java.lang.Double"></result>
    </resultMap>

    <sql id="all_collum">
        id, building, room, voltage, current, power, deltapower, gmt_create, gmt_modified
    </sql>
    <!-- 在各种标签中的id属性必须和接口中的方法名相同 ， id属性值必须是唯一的，不能够重复使用。parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型-->
    <!-- useGeneratedKeys：（ 仅 对 insert 有 用 ） 这 会 告 诉 MyBatis 使 用 JDBC 的getGeneratedKeys
                方法来取出由数据（比如：像 MySQL 和 SQLServer 这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： false。 -->
    <!--keyProperty： （仅对 insert有用）标记一个属性， MyBatis 会通过 getGeneratedKeys或者通过 insert 语句的 selectKey 子元素设置它的值。默认：不设置。 -->
    <!--#{}中的内容，为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值  -->

    <insert id="insertData" parameterType="com.terabits.meta.po.BuildingPO">
        insert into building01_data (building, room, voltage, current, power, gmt_create, gmt_modified)
        values
        <foreach collection ="list" item="buildingPO" index= "index" separator =",">
            (
            #{buildingPO.building}, #{buildingPO.room},
            #{buildingPO.voltage},
            #{buildingPO.current},
            #{buildingPO.power}, now(), now()
            )
        </foreach >
    </insert>

    <!--insert 是插入数据的动态方法-->
    <insert id="insertDataNew" parameterType="java.util.Map">
        insert into ${tablename}
        (building, room, voltage, current, power, gmt_create, gmt_modified)
        values
        <foreach collection="buildingPOS" item="buildingPO"  index= "index" separator =",">
            (
            #{buildingPO.building}, #{buildingPO.room},
            #{buildingPO.voltage},
            #{buildingPO.current},
            #{buildingPO.power}, now(), now()
            )
        </foreach>
    </insert>

    <delete id="deleteData" parameterType="com.terabits.meta.bo.SelectDataBO">
        delete from ${buildingNum}
        <where>
            <if test="building != null and building != ''">
                building = #{building}
            </if>
            <if test="room != null and room != ''">
                and room = #{room}
            </if>
            <if test="beginTime != null and beginTime != ''">
                and gmt_create >= #{beginTime}
            </if>
            <if test="endTime != null and endTime != ''">
                and gmt_create &lt; #{endTime}
            </if>
        </where>
    </delete>

    <select id="selectData" parameterType="com.terabits.meta.bo.SelectDataBO" resultMap="buildingMap">
        select * from building01_data
        <where>
            <if test="building != null and building != ''">
                building = #{building}
            </if>
            <if test="room != null and room != ''">
                and room = #{room}
            </if>
            <if test="beginTime != null and beginTime != ''">
                and gmt_create >= #{beginTime}
            </if>
            <if test="endTime != null and endTime != ''">
                and gmt_create &lt; #{endTime}
            </if>
        </where>
    </select>

    <select id="selectAllData" resultMap="buildingMap">
        select * from ${buildingNum}
    </select>

    <select id="selectMaxMeterData" resultMap="tempBusinessDataMap">
        SELECT building, room, MAX(power)  AS tempPower FROM ${tableName}
        WHERE gmt_create > #{time} GROUP BY building, room ORDER BY building, room
    </select>

    <select id="selectMinMeterData" resultMap="tempBusinessDataMap">
        SELECT building, room, MIN(power)  AS tempPower FROM ${tableName}
        WHERE gmt_create > #{time} GROUP BY building, room ORDER BY building, room
    </select>

    <update id="createNewTable" parameterType="String">
        create table ${tableName} (
        id bigint not null auto_increment,
        building char(2) not null,
        room char(4) not null,
        voltage decimal(4,1) not null,
        current decimal(6,3) not null,
        power decimal(8,2) not null,
        delta decimal(8,2),
        gmt_create datetime not null,
        gmt_modified datetime not null,
        primary key (id))
    </update>

</mapper>